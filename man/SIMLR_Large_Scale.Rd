% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SIMLR_Large_Scale.R
\name{SIMLR_Large_Scale}
\alias{SIMLR_Large_Scale}
\title{SIMLR Large Scale}
\usage{
SIMLR_Large_Scale(X, c, k = 10, kk = 100, if.impute = FALSE,
  normalize = FALSE)
}
\arguments{
\item{X}{an (m x n) data matrix of gene expression measurements of individual cells or
and object of class SCESet}

\item{c}{number of clusters to be estimated over X}

\item{k}{tuning parameter}

\item{kk}{number of principal components to be assessed in the PCA}

\item{if.impute}{should I traspose the input data?}

\item{normalize}{should I normalize the input data?}
}
\value{
clusters the cells based on SIMLR Large Scale and their similarities

list of 8 elements describing the clusters obtained by SIMLR, of which y are the resulting clusters: 
	y = results of k-means clusterings,
 	S0 = similarities computed by SIMLR, 
 	F = results from the large scale iterative procedure, 
 	ydata = data referring the the results by k-means,
 	alphaK = clustering coefficients,
 	ind = indeces from the k-nearest neighbour search,
 	val = distances from the k-nearest neighbour search,
 	execution.time = execution time of the present run
}
\description{
perform the SIMLR clustering algorithm for large scale datasets
}
\examples{
SIMLR_Large_Scale(X = ZeiselAmit$in_X, c = ZeiselAmit$n_clust, ,k = 30, kk = 200)

library(scran)
ncells = 50
ngenes = 25
mu <- 2^runif(ngenes, 3, 10)
gene.counts <- matrix(rnbinom(ngenes*ncells, mu=mu, size=2), nrow=ngenes)
rownames(gene.counts) = paste0("X", seq_len(ngenes))
sce = newSCESet(countData=data.frame(gene.counts))
output = SIMLR_Large_Scale(X = sce, c = 9)

}

